<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.restaurant</groupId>
  <artifactId>restaurant-service</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>restaurant-service</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    	<!-- JDBC Driver for PostgreSQL -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.2.18</version>
        </dependency>
        <!-- JUnit 5 -->
	    <dependency>
	        <groupId>org.junit.jupiter</groupId>
	        <artifactId>junit-jupiter-api</artifactId>
	        <version>5.7.2</version>
	        <scope>test</scope>
	    </dependency>
	    <dependency>
	        <groupId>org.junit.jupiter</groupId>
	        <artifactId>junit-jupiter-engine</artifactId>
	        <version>5.7.2</version>
	        <scope>test</scope>
	    </dependency>
	    <dependency>
	        <groupId>org.junit.jupiter</groupId>
	        <artifactId>junit-jupiter-params</artifactId>
	        <version>5.7.2</version>
	        <scope>test</scope>
	    </dependency>
	    <!-- Mockito для JUnit 5 -->
	    <dependency>
	        <groupId>org.mockito</groupId>
	        <artifactId>mockito-core</artifactId>
	        <version>3.7.7</version>
	        <scope>test</scope>
	    </dependency>
	    <dependency>
	        <groupId>org.mockito</groupId>
	        <artifactId>mockito-junit-jupiter</artifactId>
	        <version>3.7.7</version>
	        <scope>test</scope>
	    </dependency>
        <!-- Testcontainers for Docker-based testing -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>1.15.3</version>
        </dependency>
         <!-- Testcontainers JUnit Jupiter -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>1.15.3</version>
            <scope>test</scope>
        </dependency>
        <!-- Testcontainers PostgreSQL -->
        <dependency>
		    <groupId>org.testcontainers</groupId>
		    <artifactId>postgresql</artifactId>
		    <version>1.15.3</version>
		    <scope>test</scope>
		</dependency>
        <!-- Lombok for code simplification -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.20</version>
            <scope>provided</scope>
        </dependency>
        <!-- MapStruct for DTO mapping -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>1.4.2.Final</version>
        </dependency>
        <dependency>
	        <groupId>org.mapstruct</groupId>
	        <artifactId>mapstruct-processor</artifactId>
	        <version>1.4.2.Final</version>
	        <scope>provided</scope>
   		 </dependency>
        <!-- Jackson for JSON processing -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.12.3</version>
        </dependency>
        <!-- SnakeYAML for YAML configuration parsing -->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>1.29</version>
        </dependency>
        <!-- Servlet API for Jakarta EE -->
	    <dependency>
	        <groupId>jakarta.servlet</groupId>
	        <artifactId>jakarta.servlet-api</artifactId>
	        <version>5.0.0</version>
	        <scope>provided</scope>
	    </dependency>	    
	    <!-- Logback is a logging framework for Java applications. This dependency includes the classic module, which provides the implementation of the SLF4J API. -->
	    <dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-classic</artifactId>
		    <version>1.2.3</version>
		</dependency>		
  </dependencies>
  <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-javadoc-plugin</artifactId>
	            <version>3.3.0</version>
	            <configuration>
	                <outputDirectory>${project.build.directory}/apidocs</outputDirectory>
	                <show>private</show>
	                <additionalJOptions>-Xdoclint:none</additionalJOptions>
	            </configuration>
        	</plugin>
        </plugins>
    </build>
</project>
